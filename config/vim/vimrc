" ------------------------------------------------------------------------------
" Initialize

" <Leader>
let g:mapleader = "\<Space>"
" <LocalLeader>
let g:maplocalleader = ","

if &compatible
  set nocompatible
endif

" Set augroup.
augroup MyAutoCmd
  autocmd!
augroup END

let s:cache_home = empty($XDG_CACHE_HOME) ? expand('$HOME/.cache') : $XDG_CACHE_HOME
let s:config_home = empty($XDG_CONFIG_HOME) ? expand('$HOME/.config') : $XDG_CONFIG_HOME
let s:vim_home = s:config_home . '/vim'

function! CacheHome() abort
  return s:cache_home
endfunction

function! VimHome() abort
  return s:vim_home
endfunction

function! Msg(msg) abort
  "echo '### ' . a:msg
endfunction

syntax enable
filetype plugin indent on

" ------------------------------------------------------------------------------
" Plugin Manager (dein.vim) Initialization

let s:dein_dir = CacheHome() . '/dein'
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

let $CACHE = expand('~/.cache')
if !($CACHE->isdirectory())
  call mkdir($CACHE, 'p')
endif
if &runtimepath !~# '/dein.vim'
  let s:dir = 'dein.vim'->fnamemodify(':p')
  if !(s:dir->isdirectory())
    let s:dir = CacheHome() .. '/dein/repos/github.com/Shougo/dein.vim'
    if !(s:dir->isdirectory())
      execute '!git clone https://github.com/Shougo/dein.vim' s:dir
    endif
  endif
  execute 'set runtimepath^='
        \ .. s:dir->fnamemodify(':p')->substitute('[/\\]$', '', '')
endif

let s:dein_dir = CacheHome() . '/dein'
let s:toml_file = VimHome() . '/dein.toml'
let s:lazy_toml_file = VimHome() . '/deinlazy.toml'

" load dein
if dein#load_state(s:dein_dir)
  call dein#begin(s:dein_dir)
  call dein#load_toml(s:toml_file,      {'lazy': 0})
  call dein#load_toml(s:lazy_toml_file, {'lazy': 1})
  call dein#end()
  call dein#save_state()
endif

if dein#check_install()
  call dein#install()
endif

" ------------------------------------------------------------------------------
" Configure

execute 'source' VimHome() . '/basic.vim'
execute 'source' VimHome() . '/mapping.vim'
