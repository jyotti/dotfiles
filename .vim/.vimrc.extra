"-------------------------------------------------------------------------------
" extra
"-------------------------------------------------------------------------------

" --- powerline
set rtp+=~/.vim/bundle/powerline/powerline/bindings/vim
"set guifont=Ricty\ Regular\ for\ Powerline:h14
set guifont=Ricty\ Regular\ for\ Powerline
set statusline=2

" --- emoji
" https://github.com/junegunn/vim-emoji
" http://junegunn.kr/2014/06/emoji-completion-in-vim/
" <CTRL-X><CTRL-U>
" In .vimrc
"silent! if emoji#available()
"  let g:gitgutter_sign_added = emoji#for('small_blue_diamond')
"  let g:gitgutter_sign_modified = emoji#for('small_orange_diamond')
"  let g:gitgutter_sign_removed = emoji#for('small_red_triangle')
"  let g:gitgutter_sign_modified_removed = emoji#for('collision')
"endif

" --- better emoji - http://junegunn.kr/2014/06/emoji-completion-in-vim/
function! CompletionChain(findstart, base)
  if a:findstart
    " Test against the functions one by one
    for func in g:user_completion_chain
      let pos = call(func, [a:findstart, a:base])
      " If a function can complete the prefix,
      " remember the name and return the result from the function
      if pos >= 0
        let s:current_completion = func
        return pos
      endif
    endfor

    " No completion can be done
    unlet! s:current_completion
    return -1
  elseif exists('s:current_completion')
    " Simply pass the arguments to the selected function
    return call(s:current_completion, [a:findstart, a:base])
  else
    return []
  endif
endfunction

let g:user_completion_chain = ['emoji#complete', 'HTMLTagComplete']
set completefunc=CompletionChain
"""set completefunc=emoji#complete
